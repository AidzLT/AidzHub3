local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "AidzLT " .. Fluent.Version,
    SubTitle = "by LuongCongTruong",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "PunchSimulator", Icon = "" })
}

    Tabs.Main:AddParagraph({
        Title = "AidzLTHub",
        Content = "XIN CHAO,TOI LUON CHO BAN 10 DIEM, BAN BIET KHONG?"
    })

Tabs.Main:AddButton({
        Title = "OP SCRIPT PUNCH SIM",
        Description = "Very important button",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/JustAP1ayer/PlayerHubOther/main/PlayerHubPunchingSimulator.lua", true))()
        end
    })

 Tabs.Main:AddButton({
        Title = "IshiHubScript",
        Description = "Very important button",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AidzLT/IshiHubScript/main/punchsimulator"))()
        end
    })

    Tabs.Main:AddButton({
        Title = "ThatsTuffHub",
        Description = "Very important button",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/ThisIsTuff/ArmWrestleSim/main/ArmWrestleSim.lua"))()
        end
    })
	
	Tabs.Main:AddButton({
        Title = "Toris Is Me",
        Description = "Very important button",
        Callback = function()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/PerfectusMim/dbevo/main/asfasfasfasf'),true))()
        end
    })

Tabs.Main:AddButton({
        Title = "loopspeed300",
        Description = "Very important button",
        Callback = function()
            local speed = 300

if ( not game:IsLoaded() ) then
   game.Loaded:Wait()
end

local runService = game:GetService('RunService')
local localPlr = game:GetService('Players').LocalPlayer

local localHum = localPlr.Character and localPlr.Character:FindFirstChild('Humanoid')
localPlr.CharacterAdded:Connect(function(newChar)
   localHum = newChar:WaitForChild('Humanoid')
end)

runService.Heartbeat:Connect(function()
   if ( localHum ) then
       localHum.WalkSpeed = speed
   end
end)
        end
    })
	
	Tabs.Main:AddButton({
        Title = "Auto Clicker",
        Description = "Very important button",
        Callback = function()
            getgenv().Settings = {
    ["Auto Click Keybind"] = "V", -- Use an UpperCase letter or KeyCode Enum. Ex: Enum.KeyCode.Semicolon
    ["Lock Mouse Position Keybind"] = "B",
    ["Right Click"] = false,
    ["GUI"] = true, -- A drawing gui that tells you what is going on with the autoclicker.
    ["Delay"] = 60 -- 0 for RenderStepped, other numbers go to regular wait timings.
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/BimbusCoder/Script/main/Auto%20Clicker.lua"))()
        end
    })

local Tabs = {
    Main = Window:AddTab({ Title = "JESTER PUNCH SIM", Icon = "" })
}

    local Input = Tabs.Main:AddInput("Input", {
        Title = "Input",
        Default = "Default",
        Placeholder = "Placeholder",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(Value)
            print("Input changed:", Value)
        end
    })

    Input:OnChanged(function()
        print("Input updated:", Input.Value)
    end)
end

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 3
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
